/createUser
Method: POST
Description: Creates a new user in the database
Expects:
fullname: New user's fullname
email: New user's email (username)
password: New user's password
Returns:
500 if Internal Server Error
409 if User Already Exists
201 & User if User Creation Successful

/loginUser
Method: POST
Description: Logs in an existing user
Expects:
email: User's email (username)
password: User's password
Returns:
500 if Internal Server Error
401 if Invalid Username/Password
200 & JWT if Successful Login

/getUserInfo
Method: POST
Description: Returns the current user's data
Expects:
User's JWT in "x-auth" header
Returns:
500 if Internal Server Error
401 if Invalid Authentication
200 & User if Valid Authentication

/updateUserData
Method: POST
Description: Used to update user's fullname and/or password
Expects:
User's JWT in "x-auth" header
fullname: User's new fullname
password: User's new password
Returns:
500 if Internal Server Error
401 if Invalid Authentication
204 if User Update Successful

/assignPhysician
Method: POST
Description: Assigns a physician (by fullname) to user
Expects:
User's JWT in "x-auth" header
physician: Full name of physician to assign to user
Returns:
500 if Internal Server Error
401 if Invalid Authentication
400 if Invalid Physician
204 if Physician Assignment Successful

/createPhysician
Method: POST
Description: Creates a new physician in the database
Expects:
fullname: New physician's fullname
email: New physician's email (username)
password: New physician's password
Returns:
500 if Internal Server Error
409 if Physician Already Exists
201 & Physician if Physician Creation Successful

/loginPhysician
Method: POST
Description: Logs in an existing physician
Expects:
email: Physician's email (username)
password: Physician's password
Returns:
500 if Internal Server Error
401 if Invalid Username/Password
200 & JWT if Successful Login

/getPhysicianData
Method: POST
Description: Returns the current physician's data
Expects:
Physician's JWT in "x-auth" header
Returns:
500 if Internal Server Error
401 if Invalid Authentication
200 & Physician if Valid Authentication

/physicianGetAllPatientData
Method: POST
Description: Gets data for all patients associated with physician
Expects:
Physician's JWT in "x-auth" header
Returns:
500 if Internal Server Error
401 if Invalid Authentication
200 & Matching Users if Valid Authentication

/physicianGetSinglePatientData
Method: POST
Description: Gets data for single patient associated with physician
Expects:
Physician's JWT in "x-auth" header
email: User's email
Returns:
500 if Internal Server Error
401 if Invalid Authentication
200 & Matching User if Valid Authentication

/registerDevice
Method: POST
Description: Creates a new device in the database and assigns to a user
Expects:
User's JWT in "x-auth" header
id: Device's unique id
Returns:
500 if Internal Server Error
401 if Invalid Authentication
409 if Device Already Registered
201 and New Device if Device Creation Successful (Initialized With Defaults)

/deleteDevice
Method: POST
Description: Deletes and existing device
Expects:
User's JWT in "x-auth" header
id: Device's unique id
500 if Internal Server Error
401 if Invalid Authentication
400 if Device Does Not Exist
204 if Device Deletion Successful

/updateDevice
Method: POST
Description: Updates device parameters
Expects:
User/Physician's JWT in "x-auth" header
id: Device's unique id
rate: Rate at which to take readings
rangeStart: Starting time of day to take readings
rangeEnd: Ending time of day to take readings
Returns:
500 if Internal Server Error
401 if Invalid Authentication
204 if Device Update Successful

/readDevice
Method: POST
Description: Returns all device data
Expects:
User/Physician's JWT in "x-auth" header
id: Device's unique id
Returns:
500 if Internal Server Error
401 if Invalid Authentication
200 and Device if Device Read Successful

/recordReading
Method: POST
Description: Records a device sensor reading
Expects:
id: Device's unique id
APIkey: Device's unique API key
heartRate: Sensor heart rate reading
bosLevel: Sensor blood-oxygen saturation level reading
Returns:
500 if Internal Server Error
400 if Invalid Device ID
401 if Invalid Authentication
204 if Recording Successful

/pullParameters
Method: POST
Description: Pull latest device parameters
Expects:
id: Device's unique id
APIkey: Device's unique API key
Returns:
500 if Internal Server Error
400 if Invalid Device ID
401 if Invalid Authentication
200 & Device if Pull Successful





